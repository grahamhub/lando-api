"""revision worker changes

Revision ID: ceeddb788af0
Revises: 7883d80258fb
Create Date: 2022-11-29 19:30:20.431541

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "ceeddb788af0"
down_revision = "7883d80258fb"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "revision",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("revision_id", sa.Integer(), nullable=False),
        sa.Column("diff_id", sa.Integer(), nullable=False),
        sa.Column("repo_name", sa.String(length=254), nullable=False),
        sa.Column("repo_callsign", sa.String(length=254), nullable=False),
        sa.Column("landing_requested", sa.Boolean(), nullable=False),
        sa.Column(
            "status",
            sa.Enum(
                "NEW",
                "STALE",
                "WAITING",
                "PICKED_UP",
                "CHECKING",
                "PROBLEM",
                "READY",
                "QUEUED",
                "LANDING",
                "LANDED",
                "FAILED",
                name="revisionstatus",
            ),
            nullable=False,
        ),
        sa.Column("patch_hash", sa.String(length=254), nullable=False),
        sa.Column("data", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column(
            "patch_data", postgresql.JSONB(astext_type=sa.Text()), nullable=False
        ),
        sa.Column("predecessor_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["predecessor_id"],
            ["revision.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("revision_id"),
    )
    op.create_table(
        "revision_landing_job",
        sa.Column("landing_job_id", sa.Integer(), nullable=False),
        sa.Column("revision_id", sa.Integer(), nullable=False),
        sa.Column("index", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["landing_job_id"],
            ["landing_job.id"],
        ),
        sa.ForeignKeyConstraint(
            ["revision_id"],
            ["revision.id"],
        ),
        sa.PrimaryKeyConstraint("landing_job_id", "revision_id"),
    )
    op.alter_column(
        "landing_job",
        "status",
        existing_type=postgresql.ENUM(
            "SUBMITTED",
            "IN_PROGRESS",
            "DEFERRED",
            "FAILED",
            "LANDED",
            "CANCELLED",
            name="landingjobstatus",
        ),
        nullable=True,
    )
    op.alter_column(
        "landing_job",
        "revision_to_diff_id",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        nullable=True,
    )
    op.alter_column(
        "landing_job",
        "revision_order",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        nullable=True,
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "landing_job",
        "revision_order",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        nullable=False,
    )
    op.alter_column(
        "landing_job",
        "revision_to_diff_id",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        nullable=False,
    )
    op.alter_column(
        "landing_job",
        "status",
        existing_type=postgresql.ENUM(
            "SUBMITTED",
            "IN_PROGRESS",
            "DEFERRED",
            "FAILED",
            "LANDED",
            "CANCELLED",
            name="landingjobstatus",
        ),
        nullable=False,
    )
    op.drop_table("revision_landing_job")
    op.drop_table("revision")
    # ### end Alembic commands ###
